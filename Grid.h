
// ----------------------------------------------------------------------------
//
//  Grid class
//    Header
//
//  Autogenerated by Class Wizard, by Stephen Wetzel, on April 19, 2014
//
//
// ----------------------------------------------------------------------------
//  Author:        Stephen Wetzel
//  Date:          
//
// ----------------------------------------------------------------------------

#ifndef _GRID_
#define _GRID_
#include <iostream> //Basic input output (cout)
#include <string> //strings
#include <sstream> //used to convert streams to strings
#include <ostream> //output streams
#include <vector> //vectors
using namespace std;

class Grid
{
  public:
  
  // ------------------------------------------------------
  // ----- Constructors -----------------------------------
  // ------------------------------------------------------
  
  //Default constructor:
  Grid();

  //Alternate constructor:
  Grid(
        int                   rows,
        int                   columns);

  Grid(const Grid &obj); //copy constructor

  ~Grid(); //destructor
  
  // ------------------------------------------------------
  // ----- Inspectors -------------------------------------
  // ------------------------------------------------------
  
    int                   getRows()    const ;
    int                   getColumns() const ;
    
    bool areMoreMoves() const ;
    bool isGameWon() const;
    bool isLegalMove(int startPosRow,int startPosColumn,int endPosRow,int endPosColumn) const ;
  // ------------------------------------------------------
  // ----- Mutators ---------------------------------------
  // ------------------------------------------------------
  
    void setGrid(   const vector< vector<int> > &grid) ;
    void setRows(   const int                   &rows) ;
    void setColumns(const int                   &columns) ;
    void removePeg(int row, int column);
    void applyMove(int startPosRow, int startPosColumn, int endPosRow, int endPosColumn) ;
  
  // ------------------------------------------------------
  // ----- Facilitators -----------------------------------
  // ------------------------------------------------------
  
		string display() const;
		
		// ----- Overloaded Operators----------------------------
		vector<int> & operator[] (int ii);
		
  // ------------------------------------------------------
  // ----- Private Properties -----------------------------
  // ------------------------------------------------------
  
  private:
  vector< vector<int> >  grid_ ;
  int                    rows_ ;
  int                    columns_ ;
};

// ------------------------------------------------------
// ----- Overloaded Operators----------------------------
// ------------------------------------------------------

//Assuming binary operators, these will need to be edited:
ostream &operator<< (ostream &out, const Grid &obj) ;


#endif

